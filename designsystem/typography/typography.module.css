@layer mt.design {
	.heading {
		composes: ds-heading from "@digdir/designsystemet-css";

		scroll-margin-block: 4em; /* Ensure scrolling to headings still have some comfortable spacing above */
		text-wrap: pretty;
	}
	.heading[data-justify="center"] {
		text-align: center;
	}
	.heading svg {
		vertical-align: -0.15em;
	}

	.ingress {
		font-size: 1.333333em;
	}
	.muted,
	small {
		font-size: max(0.888888em, 0.75rem);
	}

	/**
	 * Info
	 */
	.info {
		--mtdsc-info-gap: var(--ds-size-2);
		--mtdsc-info-icon-size: 1em;
		--lh: calc(var(--mtdsc-info-line-height) * 1em); /* Fallback if not supporting lh unit */
		--x: calc(var(--mtdsc-info-icon-size) + var(--mtdsc-info-gap));
	}
	.info > span[data-nowrap] {
		overflow: clip;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
	@supports (height: 1lh) {
		.info {
			--lh: 1lh;
		}
	}
	.info strong {
		display: block;
	}
	.info:has(> :is(svg, i)) {
		padding-left: var(--x);
	}
	.info > :is(svg, i) {
		height: var(--lh);
		margin-left: calc(var(--x) * -1);
		position: absolute;
		text-align: center;
		width: var(--mtdsc-info-icon-size);
	}

	/**
	 * Prose
	 */
	[data-size="sm"] {
		--mtdsc-prose-size: var(--ds-body-sm-font-size); /* TMP fix to get data-size down cascading */
	}
	body,
	[data-size="md"] {
		--mtdsc-prose-size: var(--ds-body-md-font-size);
	}
	[data-size="lg"] {
		--mtdsc-prose-size: var(--ds-body-lg-font-size);
	}

	.prose {
		--mtdsc-prose-spacing: 1em;
		--mtdsc-prose-max-width: calc(var(--mtdsc-prose-size) * 40);
	}
	.prose > * {
		margin-block: 1em;
	}
	.prose > :first-child {
		margin-top: 0;
	}
	.prose > :last-child {
		margin-bottom: 0;
	}
	.prose > :where(p, ul, ol, h1, h2, h3, h4, h5, h6) {
		max-width: var(--mtdsc-prose-max-width);
	}
	.prose > :where(ul, ol):not([class]) {
		padding-left: 1em;
	}
	.prose > :where(ul, ol):not([class]) > li:not(:first-child) {
		margin-top: var(--ds-size-2);
	}
	.prose > :where([class*="heading"]) {
		margin-block: 1.5em 0;
		max-width: var(--mtdsc-prose-max-width);
	}
	.prose > :where([class*="heading"]) + :where(p, ul, ol) {
		margin-top: 0.5rem; /* size 2 is written as .5rem to for consistent value regardless of headings size */
	}
	.prose > :where([class*="heading"]) + :where([class*="heading"]) {
		margin-top: 1rem; /* Heading followed by heading shoul have size 4 between */
	}
	.prose > :where(button) {
		display: flex; /* Swap to flex instead of inline-flex to make margins collapse */
		width: fit-content;
	}
	.prose > figure {
		display: grid;
		gap: var(--ds-size-3);
		margin: var(--ds-size-8) 0;
	}
	.prose > figure > figcaption {
		font-size: var(--ds-font-size-minus-1);
	}
}
