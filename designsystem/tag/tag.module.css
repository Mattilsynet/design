@layer mt.design {
	.tag {
		composes: ds-tag from "@digdir/designsystemet-css";
		--mtdsc-tag-border-color: var(--ds-color-border-subtle);
		--mtdsc-tag-border-radius: var(--ds-border-radius-md);
		--mtdsc-tag-border-solid: solid;
		--mtdsc-tag-border-width: var(--ds-border-width-default);
		--mtdsc-tag-gap: var(--ds-size-1);
		--mtdsc-tag-min-height: var(--ds-size-7);

		/* TMP fix to scale down text, but keep --ds-size scale */
		--zoom: 0.88;
		--unzoom: 1 / var(--zoom);
		border-radius: var(--mtdsc-tag-border-radius);
		border: var(--mtdsc-tag-border-width) var(--mtdsc-tag-border-solid)
			var(--ds-color-border-subtle);
		font-size: calc(1em * var(--zoom));
		min-height: calc(var(--mtdsc-tag-min-height) * var(--unzoom));
		font-weight: normal;
		flex-shrink: 0; /* If placed in display: flex */
		font-variant-numeric: tabular-nums;
		gap: calc(var(--mtdsc-tag-gap) * var(--unzoom));
	}
	.tag[data-size="xs"],
	.tag[data-size="sm"] {
		font-size: calc(var(--ds-body-sm-font-size) * var(--zoom));
	}
	.tag[data-size="md"] {
		font-size: calc(var(--ds-body-md-font-size) * var(--zoom));
	}
	.tag[data-size="lg"] {
		font-size: calc(var(--ds-body-lg-font-size) * var(--zoom));
	}

	/**
	 * Icon
	 */
	.tag > svg {
		flex-shrink: 0; /* Never shrkink icon */
	}
	.tag:not([data-icon], :has(svg))::before {
		background: currentcolor;
		content: "";
		flex-shrink: 0;
		height: 1em;
		mask:
			center / contain no-repeat
			var(--dsc-tag-icon-url, var(--mtds-icon-success)) content-box;
		width: 1em;
	}
	.tag[data-color="info"] {
		--dsc-tag-icon-url: var(--mtds-icon-info);
	}
	.tag[data-color="warning"] {
		--dsc-tag-icon-url: var(--mtds-icon-warning);
	}
	.tag[data-color="danger"] {
		--dsc-tag-icon-url: var(--mtds-icon-danger);
	}
}
