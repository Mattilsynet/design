 /**
  * NOTE: This file is ignored by biome formatter to allow more compactness
	*/

@layer mt.design {
	/* Using :where to only reset browser agent standards, but allow other selectors (i.e. .something > *) to still winn */
	:where(.grid:not([hidden])) { display: grid }
	:where(.flex:not([hidden])) { display: flex }
	:where(.flex, .grid) {
		list-style: none;
		margin: 0;
		padding: 0;
	}

	/**
	 * Shared
	 */
	.grid,
	.flex {
		box-sizing: border-box;
		flex-wrap: wrap;
		gap: var(--ds-size-3);

		& > svg { flex-shrink: 0 } /* Never shrink svgs */
		& > * {
			box-sizing: border-box;
			margin-block: 0; /* Disable margin on lists, headings, paragraphs etc. */
			min-width: 0; /* https://css-tricks.com/preventing-a-grid-blowout/ */
		}

		&[data-center="sm"],
		&[data-center="md"],
		&[data-center="lg"],
		&[data-center="xl"],
		&[data-center="2xl"] {
			box-sizing: border-box;
			margin-inline: auto;
			width: min(100% - 1em, 100% - 20vw + 100px); /* Always .5em padding on each side, but make padding grow */
			max-width: 96rem; /* 1440px - default to "2xl" */
		}
		&[data-center="sm"] { max-width: 40rem } /* 640px */
		&[data-center="md"] { max-width: 48rem } /* 768px */
		&[data-center="lg"] { max-width: 64rem } /* 1024px */
		&[data-center="xl"] { max-width: 80rem } /* 1280px */
		&[data-center="2xl"] { max-width: 96rem } /* 1536px */

		/* Kept for backwards compatibility: none | sm | md | lg | xl  */
		&[data-gap="0"], &[data-gap="none"] { gap: 0px }
		&[data-gap="1"], &[data-gap="xs"] { gap: var(--ds-size-1) } /* 4px */
		&[data-gap="2"], &[data-gap="sm"] { gap: var(--ds-size-2) } /* 8px */
		&[data-gap="3"] { gap: var(--ds-size-3) } /* 12px */
		&[data-gap="4"], &[data-gap="md"] { gap: var(--ds-size-4) } /* 16px */
		&[data-gap="5"] { gap: var(--ds-size-5) } /* 20px */
		&[data-gap="6"], &[data-gap="lg"] { gap: var(--ds-size-6) } /* 24px */
		&[data-gap="7"] { gap: var(--ds-size-7) } /* 28px */
		&[data-gap="8"], &[data-gap="xl"] { gap: var(--ds-size-8) } /* 32px */
		&[data-gap="9"] { gap: var(--ds-size-9) } /* 36px */
		&[data-gap="10"] { gap: var(--ds-size-10) } /* 40px */
		&[data-gap="11"] { gap: var(--ds-size-11) } /* 44px */
		&[data-gap="12"] { gap: var(--ds-size-12) } /* 48px */
		&[data-gap="13"] { gap: var(--ds-size-13) } /* 52px */
		&[data-gap="14"] { gap: var(--ds-size-14) } /* 56px */
		&[data-gap="15"] { gap: var(--ds-size-15) } /* 60px */
		&[data-gap="18"] { gap: var(--ds-size-18) } /* 60px */
		&[data-gap="22"] { gap: var(--ds-size-22) } /* 72px */
		&[data-gap="26"] { gap: var(--ds-size-26) } /* 104px */
		&[data-gap="30"] { gap: var(--ds-size-30) } /* 120px */
		&[data-row-gap="0"] { row-gap: 0px }
		&[data-row-gap="1"] { row-gap: var(--ds-size-1) } /* 4px */
		&[data-row-gap="2"] { row-gap: var(--ds-size-2) } /* 8px */
		&[data-row-gap="3"] { row-gap: var(--ds-size-3) } /* 12px */
		&[data-row-gap="4"] { row-gap: var(--ds-size-4) } /* 16px */
		&[data-row-gap="5"] { row-gap: var(--ds-size-5) } /* 20px */
		&[data-row-gap="6"] { row-gap: var(--ds-size-6) } /* 24px */
		&[data-row-gap="7"] { row-gap: var(--ds-size-7) } /* 28px */
		&[data-row-gap="8"] { row-gap: var(--ds-size-8) } /* 32px */
		&[data-row-gap="9"] { row-gap: var(--ds-size-9) } /* 36px */
		&[data-row-gap="10"] { row-gap: var(--ds-size-10) } /* 40px */
		&[data-row-gap="11"] { row-gap: var(--ds-size-11) } /* 44px */
		&[data-row-gap="12"] { row-gap: var(--ds-size-12) } /* 48px */
		&[data-row-gap="13"] { row-gap: var(--ds-size-13) } /* 52px */
		&[data-row-gap="14"] { row-gap: var(--ds-size-14) } /* 56px */
		&[data-row-gap="15"] { row-gap: var(--ds-size-15) } /* 60px */
		&[data-row-gap="18"] { row-gap: var(--ds-size-18) } /* 60px */
		&[data-row-gap="22"] { row-gap: var(--ds-size-22) } /* 72px */
		&[data-row-gap="26"] { row-gap: var(--ds-size-26) } /* 104px */
		&[data-row-gap="30"] { row-gap: var(--ds-size-30) } /* 120px */
		&[data-column-gap="0"] { column-gap: 0px }
		&[data-column-gap="1"] { column-gap: var(--ds-size-1) } /* 4px */
		&[data-column-gap="2"] { column-gap: var(--ds-size-2) } /* 8px */
		&[data-column-gap="3"] { column-gap: var(--ds-size-3) } /* 12px */
		&[data-column-gap="4"] { column-gap: var(--ds-size-4) } /* 16px */
		&[data-column-gap="5"] { column-gap: var(--ds-size-5) } /* 20px */
		&[data-column-gap="6"] { column-gap: var(--ds-size-6) } /* 24px */
		&[data-column-gap="7"] { column-gap: var(--ds-size-7) } /* 28px */
		&[data-column-gap="8"] { column-gap: var(--ds-size-8) } /* 32px */
		&[data-column-gap="9"] { column-gap: var(--ds-size-9) } /* 36px */
		&[data-column-gap="10"] { column-gap: var(--ds-size-10) } /* 40px */
		&[data-column-gap="11"] { column-gap: var(--ds-size-11) } /* 44px */
		&[data-column-gap="12"] { column-gap: var(--ds-size-12) } /* 48px */
		&[data-column-gap="13"] { column-gap: var(--ds-size-13) } /* 52px */
		&[data-column-gap="14"] { column-gap: var(--ds-size-14) } /* 56px */
		&[data-column-gap="15"] { column-gap: var(--ds-size-15) } /* 60px */
		&[data-column-gap="18"] { column-gap: var(--ds-size-18) } /* 60px */
		&[data-column-gap="22"] { column-gap: var(--ds-size-22) } /* 72px */
		&[data-column-gap="26"] { column-gap: var(--ds-size-26) } /* 104px */
		&[data-column-gap="30"] { column-gap: var(--ds-size-30) } /* 120px */

		&[data-align="center"] { align-items: center }
		&[data-align="end"] { align-items: end}
		&[data-align="start"] { align-items: start }
		&[data-align="stretch"] { align-items: stretch }

		&[data-align-content="start"] { align-content: start }
		&[data-align-content="center"] { align-content: center }
		&[data-align-content="end"] { align-content: end }
		&[data-align-content="stretch"] { align-content: stretch }
		&[data-align-content="space-around"] { align-content: space-around }
		&[data-align-content="space-between"] { align-content: space-between }
		&[data-align-content="space-evenly"] { align-content: space-evenly}
	}

	/**
	 * Flex
	 */
	.flex[data-justify="start"] { justify-content: start }
	.flex[data-justify="center"] { justify-content: center }
	.flex[data-justify="end"] { justify-content: end }
	.flex[data-justify="space-around"] { justify-content: space-around }
	.flex[data-justify="space-between"] { justify-content: space-between }
	.flex[data-justify="space-evenly"] { justify-content: space-evenly }
	.flex:where([data-items], :has(> [data-self])) > * { flex: 1 1 auto }
	.flex[data-fixed] > *, .flex > [data-fixed] { flex-grow: 0 }
	.flex[data-nowrap] { flex-wrap: nowrap }
	.flex > [data-nowrap]:not(.flex) { min-width: max-content } /* .flex[data-nowrap] is allready controlled by flex-wrap: nowrap */
	.flex[data-items="25"] > :not([data-self]), .flex > [data-self="25"] { flex-basis: calc(1rem / 16 * 25) } /* Convert to rem based pixels */
	.flex[data-items="50"] > :not([data-self]), .flex > [data-self="50"] { flex-basis: calc(1rem / 16 * 50) } /* Convert to rem based pixels */
	.flex[data-items="75"] > :not([data-self]), .flex > [data-self="75"] { flex-basis: calc(1rem / 16 * 75) } /* Convert to rem based pixels */
	.flex[data-items="100"] > :not([data-self]), .flex > [data-self="100"] { flex-basis: calc(1rem / 16 * 100) }
	.flex[data-items="150"] > :not([data-self]), .flex > [data-self="150"] { flex-basis: calc(1rem / 16 * 150) }
	.flex[data-items="200"] > :not([data-self]), .flex > [data-self="200"] { flex-basis: calc(1rem / 16 * 200) }
	.flex[data-items="250"] > :not([data-self]), .flex > [data-self="250"] { flex-basis: calc(1rem / 16 * 250) }
	.flex[data-items="300"] > :not([data-self]), .flex > [data-self="300"] { flex-basis: calc(1rem / 16 * 300) }
	.flex[data-items="350"] > :not([data-self]), .flex > [data-self="350"] { flex-basis: calc(1rem / 16 * 350) }
	.flex[data-items="400"] > :not([data-self]), .flex > [data-self="400"] { flex-basis: calc(1rem / 16 * 400) }
	.flex[data-items="450"] > :not([data-self]), .flex > [data-self="450"] { flex-basis: calc(1rem / 16 * 450) }
	.flex[data-items="500"] > :not([data-self]), .flex > [data-self="500"] { flex-basis: calc(1rem / 16 * 500) }
	.flex[data-items="full"] > :not([data-self]), .flex > [data-self="full"] { flex-basis: 100% } 
	.flex > [data-self="auto"] { flex-basis: auto } /* Default */

	/**
	 * Grid
	 */
	.grid[data-justify="center"] { justify-items: center }
	.grid[data-justify="end"] { justify-items: end}
	.grid[data-justify="start"] { justify-items: start }
	.grid[data-justify="stretch"] { justify-items: stretch }
	.grid[data-items] {
		--mtds-grid-size: 0px; /* Set default layout width */
		--mtds-grid-grow: auto-fit; /* Allows columns to grow to fit container */
		grid-template-columns: repeat(var(--mtds-grid-grow), minmax(min(100%, var(--mtds-grid-size)), 1fr)); /* From https://moderncss.dev/solutions-to-replace-the-12-column-grid/ */
	}
	.grid[data-fixed] { --mtds-grid-grow: auto-fill } /* "Fixes" sizes by causing max repetitions of columns - even empty if needed */
	.grid[data-nowrap] { grid-auto-flow: column; grid-auto-columns: var(--mtds-grid-size) }
	.grid[data-items="auto"] { --mtds-grid-size: 0px }
	.grid[data-items="25"] { --mtds-grid-size: calc(1rem / 16 * 25) }
	.grid[data-items="50"] { --mtds-grid-size: calc(1rem / 16 * 50) }
	.grid[data-items="75"] { --mtds-grid-size: calc(1rem / 16 * 75) }
	.grid[data-items="100"] { --mtds-grid-size: calc(1rem / 16 * 100) }
	.grid[data-items="150"] { --mtds-grid-size: calc(1rem / 16 * 150) }
	.grid[data-items="200"] { --mtds-grid-size: calc(1rem / 16 * 200) }
	.grid[data-items="250"] { --mtds-grid-size: calc(1rem / 16 * 250) }
	.grid[data-items="300"] { --mtds-grid-size: calc(1rem / 16 * 300) }
	.grid[data-items="350"] { --mtds-grid-size: calc(1rem / 16 * 350) }
	.grid[data-items="400"] { --mtds-grid-size: calc(1rem / 16 * 400) }
	.grid[data-items="450"] { --mtds-grid-size: calc(1rem / 16 * 450) }
	.grid[data-items="500"] { --mtds-grid-size: calc(1rem / 16 * 500) }
}
