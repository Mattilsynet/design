@layer mt.design {
	.badge {
		--dsc-badge-background: var(--ds-color-base-default);
		--dsc-badge-color: var(--ds-color-base-contrast-default);
		--dsc-badge-size: var(--ds-size-3);
		--_mtdsc-badge-small: ;

		flex-shrink: 0; /* If placed in flex */
		position: relative;
		place-items: center;
		vertical-align: middle;
	}
	.badge:where(:not([hidden])) {
		display: inline-grid;
	}

	.badge::before {
		background: var(--dsc-badge-background);
		border-radius: var(--ds-border-radius-full);
		box-sizing: border-box;
		color: var(--dsc-badge-color);
		content: attr(data-badge) ""; /* Empty string need to ensure bade is shown even when data-badge is empty */
		display: grid;
		font-size: 0.77778em;
		font-variant-numeric: tabular-nums;
		font-weight: 700;
		inset: 0 0 auto auto;
		line-height: 0.57;
		margin: var(--mtdsc-badge-offset);
		min-height: var(--dsc-badge-size);
		min-width: var(--dsc-badge-size);
		padding: var(--ds-size-2);
		place-items: center;
		position: var(--_mtdsc-badge-small, absolute);
		scale: var(--_mtdsc-badge-small, 0.85);
		translate: var(--_mtdsc-badge-small, 50% -50%);
		white-space: nowrap;
	}

	.badge[data-badge="true"]::before {
		/* biome-ignore lint: Important is okay since this is in a @layer */
		content: "" !important; /* Ensure "true" is not rendered, even in AppLayout */
	}
	.badge:not(:empty) {
		--_mtdsc-badge-small: initial;
	}
	.badge:has([class*="avatar"]) {
		--mtdsc-badge-offset: var(--ds-size-2);
	}
	.badge > svg {
		fill: currentColor;
		flex-shrink: 0;
		font-size: 1em;
		height: var(--mtds-icon-size);
		width: var(--mtds-icon-size);
	}
}
