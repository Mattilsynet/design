@layer mt.design {
	.steps {
		--mtdsc-steps-dot-size: var(--ds-size-7);
		--mtdsc-steps-gap: var(--ds-size-4);
		--mtdsc-steps-stroke-color: var(--ds-color-border-subtle);
		--mtdsc-steps-stroke-size: 2px;

		display: flex;
		list-style: none;
		margin: 0;
		padding: 0;
		text-align: center;
	}
	.steps > li {
		--dot-after: var(--mtdsc-steps-stroke-color);
		--dot-before: var(--mtdsc-steps-stroke-color);
		--dot-text: initial;
		--dot-fill: initial;
		--dot-icon: linear-gradient(transparent);

		border-radius: var(--ds-border-radius-md);
		box-sizing: border-box;
		flex: 1;
		position: relative;
		text-decoration: none;
		padding-inline: var(--mtds-4);
	}

	/*
	 * Line
	 */
	.steps > li::before,
	.steps > li::after {
		background: linear-gradient(to right, transparent, var(--dot-before));
		content: "";
		height: var(--mtdsc-steps-stroke-size);
		inset: 0 50% auto -50%;
		margin: calc(var(--mtdsc-steps-dot-size) / 2);
		position: absolute;
		translate: 0 -50%;
	}
	.steps > li::after {
		background: linear-gradient(to right, var(--dot-after), transparent);
		inset-inline: 50% -50%;
	}
	.steps > li:first-child::before {
		left: 0;
	}
	.steps > li:last-child::after {
		right: 0;
	}

	/*
	 * Dot
	 */
	.steps > li mark {
		background: var(--dot-fill);
		border-radius: var(--ds-border-radius-full);
		border: var(--mtdsc-steps-stroke-size) solid
			var(--dot-fill, var(--mtdsc-steps-stroke-color));
		box-sizing: border-box;
		color: var(--dot-text); /* Let it be affected by data-color */
		height: var(--mtdsc-steps-dot-size);
		display: grid;
		place-items: center;
		margin: 0 auto var(--mtdsc-steps-gap);
		position: relative;
		transition: 0.2s scale;
		width: var(--mtdsc-steps-dot-size);
		z-index: 2; /* Place above line */
	}
	.steps > li mark > svg,
	.steps > li mark:empty::before {
		width: 75%;
		height: 75%;
	}
	.steps > li mark:empty::before {
		background: currentColor;
		content: "";
		mask: var(--dot-icon) center / contain no-repeat;
	}

	/*
	 * Interaction
	 */
	.steps > li > :is(a, button):only-child {
		background: none;
		border-radius: inherit;
		border: 0;
		box-sizing: border-box;
		color: inherit;
		cursor: pointer;
		display: block;
		font: inherit;
		margin: 0;
		padding: 0;
		text-align: inherit;
		text-decoration: none;
		width: 100%;
	}
	.steps > li > :is(a, button):only-child:focus-visible {
		box-shadow: var(--dsc-focus-boxShadow);
		outline: var(--dsc-focus-outline);
		outline-offset: var(--ds-border-width-focus);
	}
	.steps > li > :is(a, button):only-child:hover:not(:active) mark {
		scale: 1.175;
	}

	/*
	 * States
	 */
	.steps:not([data-direction="up"]) > li[aria-current="step"],
	.steps:not([data-direction="up"]) > li:has(~ li[aria-current="step"]),
	.steps[data-direction="up"] > [aria-current="step"] ~ li,
	.steps[data-state="complete"] > li {
		--dot-before: var(--dot-fill);
	}
	.steps:not([data-direction="up"]) > li:has(~ li[aria-current="step"]),
	.steps[data-direction="up"] > li[aria-current="step"] ~ li,
	.steps[data-direction="up"] > li[aria-current="step"],
	.steps[data-state="complete"] > li {
		--dot-after: var(--dot-fill);
	}
	.steps > li[aria-current="step"] mark {
		box-shadow:
			0 0 0 var(--mtdsc-steps-stroke-size) var(--dot-text),
			0 0 0 calc(var(--mtdsc-steps-stroke-size) * 2) var(--dot-fill);
	}
	.steps[data-state="complete"] > li,
	.steps:not([data-direction="up"]) > li:where(:has(~ li[aria-current="step"])),
	.steps[data-direction="up"] > li:where([aria-current="step"] ~ li) {
		--dot-icon: var(--mtds-icon-check);
	}
	.steps[data-state="complete"] > li,
	.steps[data-direction="up"] > li[aria-current="step"] ~ li,
	.steps:not([data-direction="up"]) > li:has(~ li[aria-current="step"]),
	.steps > li[aria-current="step"],
	.steps > li[data-color] {
		--dot-text: var(--ds-color-base-contrast-default);
		--dot-fill: var(--ds-color-base-default);
	}
	.steps > li[data-color="danger"],
	.steps > li[data-color="warning"] {
		--dot-icon: var(--mtds-icon-close);
	}

	/*
	 * Fade
	 */
	.steps:is(
		:not([data-fade]),
		[data-fade="false"],
		[data-fade="end"]:not([data-direction="up"]),
		[data-fade="start"][data-direction="up"]
	)
	> li:first-child::before {
		display: none;
	}
	.steps:is(
			:not([data-fade]),
			[data-fade="false"],
			[data-fade="start"]:not([data-direction="up"]),
			[data-fade="end"][data-direction="up"]
		)
		> li:last-child::after {
		display: none;
	}

	/*
	 * Vertical
	 */
	.steps[data-direction]:not([data-direction="right"]) {
		flex-wrap: wrap;
		text-align: left;
	}
	.steps[data-direction]:not([data-direction="right"]) > li {
		flex: 1 0 100%;
		min-height: calc(var(--mtdsc-steps-dot-size) * 2);
		padding-block: 0 var(--mtdsc-steps-dot-size);
		padding-inline: calc(var(--mtdsc-steps-dot-size) + var(--mtdsc-steps-gap)) 0;
	}
	.steps[data-direction]:not([data-direction="right"]) > li mark {
		inset: 0;
		margin: 0;
		position: absolute;
	}
	.steps[data-direction]:not([data-direction="right"]) > li::before,
	.steps[data-direction]:not([data-direction="right"]) > li::after {
		background: linear-gradient(transparent, var(--dot-before));
		height: auto;
		margin-block: 0;
		width: var(--mtdsc-steps-stroke-size);
		inset: calc(var(--mtdsc-steps-dot-size) * -1) 0 100%;
		translate: -50%;
	}
	.steps[data-direction]:not([data-direction="right"]) > li::after {
		inset-block: var(--mtdsc-steps-dot-size) 0;
		background: linear-gradient(
			var(--dot-after),
			var(--dot-after-end, var(--dot-after))
		);
	}
	.steps[data-direction]:not([data-direction="right"]) > li:last-child::after {
		--dot-after-end: transparent;
	}
}
