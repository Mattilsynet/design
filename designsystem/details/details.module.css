@layer mt.design {
	.details {
		composes: ds-details from "@digdir/designsystemet-css";

		--dsc-details-size: auto; /* Set <summary> height based on content */
		--dsc-details-background: transparent;
		--dsc-details-icon-size: var(--mtds-icon-size);
		--dsc-details-icon-url: var(--mtds-icon-chevron);
		--dsc-details-summary-background--hover: var(--ds-color-background-tinted);
		--dsc-details-summary-background--open: transparent;
		--dsc-details-summary-background: transparent;
		--dsc-details-padding: var(--mtdsc-details-padding-block)
			var(--mtdsc-details-padding-inline); /* Sets Designsystemet property */
		--mtdsc-details-padding-block: var(--ds-size-3);
		--mtdsc-details-padding-inline: var(--ds-size-4);
		--mtdsc-details-card-radius: var(--ds-border-radius-lg);
		--mtdsc-details-transition-duration: 400ms;
		--_mtdsc-details-padding-left: var(--mtdsc-details-padding-inline);

		padding-left: var(--_mtdsc-details-padding-left);
		padding-right: var(--mtdsc-details-padding-inline);
		transition-duration: var(--mtdsc-details-transition-duration);
		transition-property: padding;
	}
	.details:not([hidden]) {
		display: block; /* Make u-elements block even without JS */
	}
	.details:not(:defined) /* When no JS */,
	.details[open] {
		padding-bottom: var(--mtdsc-details-padding-block);
	}
	.details:not([data-variant="card"]),
	.details:not([data-variant="card"]) {
		--_mtdsc-details-padding-left: calc(
			var(--mtdsc-details-padding-inline) +
			var(--dsc-details-icon-size) +
			var(--dsc-details-icon-gap)
		);
	}

	/* Make text color change when adding [data-color] */
	.details[data-color] {
		color: var(--mtds-color-text-default);
	}
	.details:not([data-variant="card"]) + .details {
		margin-top: 0; /* Reset if placed in Prose */
	}
	.details:not([data-variant="card"]):has(+ .details) {
		margin-bottom: 0; /* Reset if placed in Prose */
	}
	.details > :is(summary, u-summary) {
		align-items: center;
		margin-left: calc(var(--_mtdsc-details-padding-left) * -1);
		margin-right: calc(var(--mtdsc-details-padding-inline) * -1);
		transition-duration: 0.2s;
		transition-property: font-weight, background;
	}
	.details[open] > :is(summary, u-summary) {
		--dsc-details-summary-background--hover: transparent;
		font-weight: 700;
	}
	.details > :is(summary, u-summary)::before {
		border: 0;
		margin: 0;
		padding: 0;
		transition: rotate 0.2s ease-out;
		height: 1lh; /* Align with first line */
	}
	.details[open] > :is(summary, u-summary)::before {
		rotate: -180deg;
	}

	:where(.details > :not(summary, u-summary)) {
		border-radius: 0; /* Reset DigiDir, using :where to allow any child element to override styling */
		margin: 0; /* Reset DigiDir, using :where to allow any child element to override styling */
		padding: 0;
	}

	.details::details-content,
	.details::part(details-content) {
		transition-duration: var(--mtdsc-details-transition-duration);
		transition-property: content-visibility, height;
	}

	.details[data-variant="card"] {
		--dsc-details-background: var(--ds-color-surface-default);
		border-radius: var(--mtdsc-details-card-radius);
		border: var(--dsc-details-border-block-width)
			var(--dsc-details-border-block-style) var(--dsc-details-border-color);
	}
	.details[data-variant="card"][data-color]:not([data-color="main"]) {
		--dsc-details-background: var(--ds-color-background-tinted);
	}
	.details[data-variant="card"] > :is(summary, u-summary) {
		border-radius: var(--mtdsc-details-card-radius);
	}
	.details[data-variant="card"] > * {
		flex-grow: 1; /* Make children grow... */
	}
	.details[data-variant="card"]
		> :is(summary, u-summary)
		> :is(img, svg):first-child {
		flex: 0 0 auto; /* ..but prevent icon from shrinking or growing */
		width: var(--mtds-icon-size);
		height: 1lh; /* Align with first line if using `data-align="start"` */
	}
	.details[data-variant="card"] > :is(summary, u-summary)::before {
		height: 1lh; /* Align with first line if using `data-align="start"` */
		margin-inline-start: auto;
		order: 1;
	}
	.details[data-align="start"] > :is(summary, u-summary) {
		align-items: start;
	}
}
