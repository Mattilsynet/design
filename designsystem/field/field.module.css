@layer mt.design {
	.field {
		composes: ds-field from "@digdir/designsystemet-css";
		row-gap: var(--ds-size-2);

		/* Child added event inspired by: https://davidwalsh.name/detect-node-insertion */
		& :is(:defined, [class*="validation"], input, select, textarea, p) {
			animation: fieldChildAdded 50ms; /* Shorter animation time than .fieldset to ensure correct validation shows */
		}

		/* <p> is used for field descriptions */
		& > p {
			margin: 0;
		}

		& > label + p {
			margin-top: calc(var(--ds-size-2) * -1);
		}

		/*  Mark as required */
		&:has(:required, [aria-required="true"]) > label::after {
			content: var(--mt-required);
			background: var(--mt-bekk);
			border-radius: var(--ds-border-radius-sm);
			color: var(--mt-fjord);
			font-size: .75em;
			font-weight: normal;
			line-height: var(--ds-line-height-sm);
			margin-inline-start: var(--ds-size-2);
			padding: var(--ds-size-1) var(--ds-size-2);
		}

		&:has(input:is([type="radio"], [type="checkbox"])) label {
			font-weight: 500;
		}

		/* Allow inputs to have both readonly and disabled since browser does not prevent readonly on checkobx/radio */
		&:has([readonly]:disabled) label {
			cursor: default;
			opacity: 1;
		}
	}

	.affixes {
		composes: ds-field-affixes from "@digdir/designsystemet-css";

		--dsc-field-affix-border-color: var(--ds-color-neutral-border-default);
		--dsc-field-affix-border: 1px solid var(--dsc-field-affix-border-color);

		align-items: center;
		box-shadow: inset 0 0 0 1px var(--dsc-field-affix-border-color);
		display: flex;

		& > * {
			padding-inline: var(--dsc-field-affix-padding-inline);
		}
	}
	.count {
		font: inherit;
	}
}

@keyframes fieldChildAdded {
	from {
		scale: 1;
	}
}
