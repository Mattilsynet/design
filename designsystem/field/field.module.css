@layer mt.design {
	.field {
		composes: ds-field from "@digdir/designsystemet-css";
		position: relative; /* Support <u-datalist> positioning */
		row-gap: var(--dsc-field-content-spacing);
		text-wrap: pretty; /* Make required tag wrap pretty */
	}
	.field > * {
		text-wrap: wrap; /* Reset text-wrap */
	}

	/* Remove space between label and description */
	.field > p:first-of-type {
		margin-top: 0;
	}
	.field > :not(:disabled, [aria-disabled="true"]) {
		opacity: 1; /* Overwrite DigiDir disabled */
	}
	.field textarea {
		height: var(--mtds-textarea-height); /* Set height through CSS custom property instead of directly in JS for easier overwrite */
	}

	/**
	 * Mark <label> as required
	 */
	.field label {
		display: contents;
	}
	.field:has(:required, [aria-required="true"]) label::after {
		background: var(--ds-color-info-surface-tinted);
		border-radius: var(--ds-border-radius-md);
		border: var(--ds-border-width-default) solid
			var(--ds-color-info-border-subtle);
		color: var(--ds-color-info-text-default);
		content: var(--mtds-text-required);
		font-size: .75em;
		font-weight: normal;
		margin-left: 1ch;
		padding: .18em var(--ds-size-2);
		vertical-align: .1em;
		white-space: nowrap;
	}

	/**
	 * Toggles
	 */
	.field:has(input:is([type="radio"], [type="checkbox"])) {
		grid-template: "input content help" / auto 1fr auto; /* Make space for helpText as well */
		gap: 0;

		& > input {
			margin-right: var(--mtdsc-field-content-spacing);
		}

		/* Helptext */
		& > button[class*="helptext"] {
			grid-area: help;
			margin-block: 0;
		}

		& label {
			font-weight: normal;
		}
		& p {
			font-size: var(--ds-font-size-minus-1);
		}
		&:has([readonly]:disabled) label {
			cursor: default; /* Stiling when both readonly and disabled since browser does not prevent readonly on checkobx/radio */
		}
	}

	/**
	 * Suggestion
	 */
	.field u-datalist {
		background: var(--ds-color-surface-default);
		border-radius: var(--ds-border-radius-md);
		border: 1px solid var(--ds-color-border-subtle);
		box-shadow: var(--ds-shadow-md);
		box-sizing: border-box;
		color: var(--ds-color-text-default);
		left: 0;
		margin: var(--ds-size-1) 0;
		max-height: 400px;
		overflow: auto;
		padding: var(--ds-size-2);
		position: absolute;
		width: 100%;
		z-index: 9999;

		/* Hide <u-option role="none"> if any other <u-option> is visible */
		& > u-option[role="none"] {
			display: block;
		}
		&:has(u-option:not([hidden]):not([aria-disabled="true"]):not([role="none"]))
			> u-option[role="none"] {
			display: none;
		}
	}
	.field u-option {
		position: relative;
		border-radius: 3px; /* 5px border-radius */
		outline: 0;
		padding: var(--ds-size-2);
		transition: .1s background-color;
	}
	.field u-option[aria-selected="true"] {
		padding-left: var(--ds-size-10);
	}
	.field u-option[aria-selected="true"]::before {
		background: currentcolor;
		content: "";
		mask: center / contain no-repeat var(--mtds-icon-check);
		position: absolute;
		inset: 0 auto 0 var(--ds-size-3);
		width: var(--mtds-icon-size);
	}
	.field u-option[role="option"]:hover {
		background: var(--ds-color-surface-hover);
	}

	.field u-option:focus,
	.field u-tags > data:focus {
		box-shadow: var(--dsc-focus-boxShadow);
		outline-offset: var(--ds-border-width-focus);
		outline: var(--dsc-focus-outline);
		position: relative;
		z-index: 1; /* Place focus line on top */
	}

	/**
	 * Multi suggestion
	 */
	.field u-tags {
		display: flex;
		flex-wrap: wrap;
		gap: var(--ds-size-2);
		position: relative;
	}
	.field u-tags > input {
		flex: 1 0 100%;
	}
	.field u-tags > data {
		align-items: center;
		background: var(--ds-color-surface-tinted);
		border-radius: var(--ds-border-radius-full);
		border: 1px solid var(--ds-color-border-subtle);
		box-sizing: border-box;
		color: var(--ds-color-text-default);
		cursor: pointer;
		display: inline-flex;
		font-size: var(--ds-font-size-minus-1);
		line-height: var(--ds-line-height-sm);
		min-height: var(--ds-size-8);
		padding-left: var(--ds-size-3);
		text-decoration: none;
		transition: .2s;
	}
	.field u-tags > data::after {
		background: currentcolor;
		height: var(--ds-size-8);
		mask: center / 60% no-repeat var(--mtds-icon-close);
		width: var(--ds-size-8);
		padding: 0;
		border-radius: var(--ds-border-radius-full);
	}
	.field u-tags > data:hover::after {
		mask-image: var(--mtds-icon-close--filled);
		mask-size: 100%;
	}
	.field u-tags > u-datalist {
		top: 100%;
	}

	/**
	 * Affixes
	 */
	.affixes {
		composes: ds-field-affixes from "@digdir/designsystemet-css";

		--dsc-field-affix-border-color: var(--ds-color-border-default);

		align-items: center;
		background: var(--ds-color-background-tinted);
		box-shadow: inset 0 0 0 1px var(--dsc-field-affix-border-color);
		color: inherit;
		white-space: nowrap;
	}
	.affixes:where(:not([hidden])) {
		display: flex;
	}

	/* TMP: LastPass fix */
	.affixes > :not(:empty) {
		padding-inline: var(--dsc-field-affix-padding-inline);
	}
	.affixes > input:has(+ [data-lastpass-icon-root]) {
		border-bottom-right-radius: var(--ds-border-radius-md);
		border-top-right-radius: var(--ds-border-radius-md);
	}
}

/* Add option to hide required text */
[data-required="hidden"] {
	--mtds-text-required: none;
}
